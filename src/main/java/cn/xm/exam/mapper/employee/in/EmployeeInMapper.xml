<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xm.exam.mapper.employee.in.EmployeeInMapper" >
  <resultMap id="BaseResultMap" type="cn.xm.exam.bean.employee.in.EmployeeIn" >
    <id column="employeeId" property="employeeid" jdbcType="VARCHAR" />
    <result column="employeeNumber" property="employeenumber" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="idCode" property="idcode" jdbcType="CHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="duty" property="duty" jdbcType="VARCHAR" />
    <result column="departmentId" property="departmentid" jdbcType="VARCHAR" />
    <result column="finger" property="finger" jdbcType="VARCHAR" />
    <result column="isDelete" property="isdelete" jdbcType="VARCHAR" />
    <result column="trainStatus" property="trainstatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    employeeId, employeeNumber, name, idCode, sex, birthday, photo, phone, email, address, 
    duty, departmentId, finger, isDelete, trainStatus
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xm.exam.bean.employee.in.EmployeeInExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee_in
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from employee_in
    where employeeId = #{employeeid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from employee_in
    where employeeId = #{employeeid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xm.exam.bean.employee.in.EmployeeInExample" >
    delete from employee_in
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xm.exam.bean.employee.in.EmployeeIn" >
    insert into employee_in (employeeId, employeeNumber, name, 
      idCode, sex, birthday, photo, 
      phone, email, address, 
      duty, departmentId, finger, 
      isDelete, trainStatus,sort)
    values (#{employeeid,jdbcType=VARCHAR}, #{employeenumber,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{idcode,jdbcType=CHAR}, #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{photo,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{duty,jdbcType=VARCHAR}, #{departmentid,jdbcType=VARCHAR}, #{finger,jdbcType=VARCHAR}, 
      #{isdelete,jdbcType=VARCHAR}, #{trainstatus,jdbcType=INTEGER},#{sort,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.xm.exam.bean.employee.in.EmployeeIn" >
    insert into employee_in
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="employeeid != null" >
        employeeId,
      </if>
      <if test="employeenumber != null" >
        employeeNumber,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="idcode != null" >
        idCode,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="photo != null" >
        photo,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="duty != null" >
        duty,
      </if>
      <if test="departmentid != null" >
        departmentId,
      </if>
      <if test="finger != null" >
        finger,
      </if>
      <if test="isdelete != null" >
        isDelete,
      </if>
      <if test="trainstatus != null" >
        trainStatus,
      </if>
      <if test="sort != null" >
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="employeeid != null" >
        #{employeeid,jdbcType=VARCHAR},
      </if>
      <if test="employeenumber != null" >
        #{employeenumber,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcode != null" >
        #{idcode,jdbcType=CHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="duty != null" >
        #{duty,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=VARCHAR},
      </if>
      <if test="finger != null" >
        #{finger,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=VARCHAR},
      </if>
      <if test="trainstatus != null" >
        #{trainstatus,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xm.exam.bean.employee.in.EmployeeInExample" resultType="java.lang.Integer" >
    select count(*) from employee_in
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employee_in
    <set >
      <if test="record.employeeid != null" >
        employeeId = #{record.employeeid,jdbcType=VARCHAR},
      </if>
      <if test="record.employeenumber != null" >
        employeeNumber = #{record.employeenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.idcode != null" >
        idCode = #{record.idcode,jdbcType=CHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.photo != null" >
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.duty != null" >
        duty = #{record.duty,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentid != null" >
        departmentId = #{record.departmentid,jdbcType=VARCHAR},
      </if>
      <if test="record.finger != null" >
        finger = #{record.finger,jdbcType=VARCHAR},
      </if>
      <if test="record.isdelete != null" >
        isDelete = #{record.isdelete,jdbcType=VARCHAR},
      </if>
      <if test="record.trainstatus != null" >
        trainStatus = #{record.trainstatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employee_in
    set employeeId = #{record.employeeid,jdbcType=VARCHAR},
      employeeNumber = #{record.employeenumber,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      idCode = #{record.idcode,jdbcType=CHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      photo = #{record.photo,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      duty = #{record.duty,jdbcType=VARCHAR},
      departmentId = #{record.departmentid,jdbcType=VARCHAR},
      finger = #{record.finger,jdbcType=VARCHAR},
      isDelete = #{record.isdelete,jdbcType=VARCHAR},
      trainStatus = #{record.trainstatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xm.exam.bean.employee.in.EmployeeIn" >
    update employee_in
    <set >
      <if test="employeenumber != null" >
        employeeNumber = #{employeenumber,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcode != null" >
        idCode = #{idcode,jdbcType=CHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="duty != null" >
        duty = #{duty,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null" >
        departmentId = #{departmentid,jdbcType=VARCHAR},
      </if>
      <if test="finger != null" >
        finger = #{finger,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        isDelete = #{isdelete,jdbcType=VARCHAR},
      </if>
      <if test="trainstatus != null" >
        trainStatus = #{trainstatus,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=VARCHAR},
      </if>
    </set>
    where employeeId = #{employeeid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xm.exam.bean.employee.in.EmployeeIn" >
    update employee_in
    set employeeNumber = #{employeenumber,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      idCode = #{idcode,jdbcType=CHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      photo = #{photo,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      duty = #{duty,jdbcType=VARCHAR},
      departmentId = #{departmentid,jdbcType=VARCHAR},
      finger = #{finger,jdbcType=VARCHAR},
      isDelete = #{isdelete,jdbcType=VARCHAR},
      trainStatus = #{trainstatus,jdbcType=INTEGER},
      sort = #{sort,jdbcType=VARCHAR}
    where employeeId = #{employeeid,jdbcType=VARCHAR}
  </update>
</mapper>