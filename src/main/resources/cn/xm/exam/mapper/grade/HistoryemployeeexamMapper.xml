<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xm.exam.mapper.grade.HistoryemployeeexamMapper" >
  <resultMap id="BaseResultMap" type="cn.xm.exam.bean.grade.Historyemployeeexam" >
    <id column="gradeId" property="gradeid" jdbcType="VARCHAR" />
    <result column="examId" property="examid" jdbcType="VARCHAR" />
    <result column="employeeId" property="employeeid" jdbcType="VARCHAR" />
    <result column="employeeName" property="employeename" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="REAL" />
    <result column="examMethod" property="exammethod" jdbcType="VARCHAR" />
    <result column="employeeType" property="employeetype" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    gradeId, examId, employeeId, employeeName, grade, examMethod, employeeType
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xm.exam.bean.grade.HistoryemployeeexamExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from historyemployeeexam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from historyemployeeexam
    where gradeId = #{gradeid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from historyemployeeexam
    where gradeId = #{gradeid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xm.exam.bean.grade.HistoryemployeeexamExample" >
    delete from historyemployeeexam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xm.exam.bean.grade.Historyemployeeexam" >
    insert into historyemployeeexam (gradeId, examId, employeeId, 
      employeeName, grade, examMethod, 
      employeeType)
    values (#{gradeid,jdbcType=VARCHAR}, #{examid,jdbcType=VARCHAR}, #{employeeid,jdbcType=VARCHAR}, 
      #{employeename,jdbcType=VARCHAR}, #{grade,jdbcType=REAL}, #{exammethod,jdbcType=VARCHAR}, 
      #{employeetype,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.xm.exam.bean.grade.Historyemployeeexam" >
    insert into historyemployeeexam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="gradeid != null" >
        gradeId,
      </if>
      <if test="examid != null" >
        examId,
      </if>
      <if test="employeeid != null" >
        employeeId,
      </if>
      <if test="employeename != null" >
        employeeName,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="exammethod != null" >
        examMethod,
      </if>
      <if test="employeetype != null" >
        employeeType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="gradeid != null" >
        #{gradeid,jdbcType=VARCHAR},
      </if>
      <if test="examid != null" >
        #{examid,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null" >
        #{employeeid,jdbcType=VARCHAR},
      </if>
      <if test="employeename != null" >
        #{employeename,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=REAL},
      </if>
      <if test="exammethod != null" >
        #{exammethod,jdbcType=VARCHAR},
      </if>
      <if test="employeetype != null" >
        #{employeetype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xm.exam.bean.grade.HistoryemployeeexamExample" resultType="java.lang.Integer" >
    select count(*) from historyemployeeexam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update historyemployeeexam
    <set >
      <if test="record.gradeid != null" >
        gradeId = #{record.gradeid,jdbcType=VARCHAR},
      </if>
      <if test="record.examid != null" >
        examId = #{record.examid,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeid != null" >
        employeeId = #{record.employeeid,jdbcType=VARCHAR},
      </if>
      <if test="record.employeename != null" >
        employeeName = #{record.employeename,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=REAL},
      </if>
      <if test="record.exammethod != null" >
        examMethod = #{record.exammethod,jdbcType=VARCHAR},
      </if>
      <if test="record.employeetype != null" >
        employeeType = #{record.employeetype,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update historyemployeeexam
    set gradeId = #{record.gradeid,jdbcType=VARCHAR},
      examId = #{record.examid,jdbcType=VARCHAR},
      employeeId = #{record.employeeid,jdbcType=VARCHAR},
      employeeName = #{record.employeename,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=REAL},
      examMethod = #{record.exammethod,jdbcType=VARCHAR},
      employeeType = #{record.employeetype,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xm.exam.bean.grade.Historyemployeeexam" >
    update historyemployeeexam
    <set >
      <if test="examid != null" >
        examId = #{examid,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null" >
        employeeId = #{employeeid,jdbcType=VARCHAR},
      </if>
      <if test="employeename != null" >
        employeeName = #{employeename,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=REAL},
      </if>
      <if test="exammethod != null" >
        examMethod = #{exammethod,jdbcType=VARCHAR},
      </if>
      <if test="employeetype != null" >
        employeeType = #{employeetype,jdbcType=VARCHAR},
      </if>
    </set>
    where gradeId = #{gradeid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xm.exam.bean.grade.Historyemployeeexam" >
    update historyemployeeexam
    set examId = #{examid,jdbcType=VARCHAR},
      employeeId = #{employeeid,jdbcType=VARCHAR},
      employeeName = #{employeename,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=REAL},
      examMethod = #{exammethod,jdbcType=VARCHAR},
      employeeType = #{employeetype,jdbcType=VARCHAR}
    where gradeId = #{gradeid,jdbcType=VARCHAR}
  </update>
</mapper>