<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xm.exam.mapper.trainContent.TraincontentMapper" >
  <resultMap id="BaseResultMap" type="cn.xm.exam.bean.trainContent.Traincontent" >
    <id column="documentId" property="documentid" jdbcType="INTEGER" />
    <result column="departmentId" property="departmentid" jdbcType="VARCHAR" />
    <result column="documentName" property="documentname" jdbcType="VARCHAR" />
    <result column="trainType" property="traintype" jdbcType="VARCHAR" />
    <result column="departmentName" property="departmentname" jdbcType="VARCHAR" />
    <result column="knowledgeType" property="knowledgetype" jdbcType="VARCHAR" />
    <result column="originalName" property="originalname" jdbcType="VARCHAR" />
    <result column="currentName" property="currentname" jdbcType="VARCHAR" />
    <result column="upTime" property="uptime" jdbcType="TIMESTAMP" />
    <result column="size" property="size" jdbcType="VARCHAR" />
    <result column="employeeName" property="employeename" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="browseTimes" property="browsetimes" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    documentId, departmentId, documentName, trainType, departmentName, knowledgeType, 
    originalName, currentName, upTime, size, employeeName, level, description, browseTimes
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xm.exam.bean.trainContent.TraincontentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from traincontent
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from traincontent
    where documentId = #{documentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from traincontent
    where documentId = #{documentid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xm.exam.bean.trainContent.TraincontentExample" >
    delete from traincontent
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xm.exam.bean.trainContent.Traincontent" >
    insert into traincontent (documentId, departmentId, documentName, 
      trainType, departmentName, knowledgeType, 
      originalName, currentName, upTime, 
      size, employeeName, level, 
      description, browseTimes)
    values (#{documentid,jdbcType=INTEGER}, #{departmentid,jdbcType=VARCHAR}, #{documentname,jdbcType=VARCHAR}, 
      #{traintype,jdbcType=VARCHAR}, #{departmentname,jdbcType=VARCHAR}, #{knowledgetype,jdbcType=VARCHAR}, 
      #{originalname,jdbcType=VARCHAR}, #{currentname,jdbcType=VARCHAR}, #{uptime,jdbcType=TIMESTAMP}, 
      #{size,jdbcType=VARCHAR}, #{employeename,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{browsetimes,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.xm.exam.bean.trainContent.Traincontent" >
    insert into traincontent
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="documentid != null" >
        documentId,
      </if>
      <if test="departmentid != null" >
        departmentId,
      </if>
      <if test="documentname != null" >
        documentName,
      </if>
      <if test="traintype != null" >
        trainType,
      </if>
      <if test="departmentname != null" >
        departmentName,
      </if>
      <if test="knowledgetype != null" >
        knowledgeType,
      </if>
      <if test="originalname != null" >
        originalName,
      </if>
      <if test="currentname != null" >
        currentName,
      </if>
      <if test="uptime != null" >
        upTime,
      </if>
      <if test="size != null" >
        size,
      </if>
      <if test="employeename != null" >
        employeeName,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="browsetimes != null" >
        browseTimes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="documentid != null" >
        #{documentid,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=VARCHAR},
      </if>
      <if test="documentname != null" >
        #{documentname,jdbcType=VARCHAR},
      </if>
      <if test="traintype != null" >
        #{traintype,jdbcType=VARCHAR},
      </if>
      <if test="departmentname != null" >
        #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="knowledgetype != null" >
        #{knowledgetype,jdbcType=VARCHAR},
      </if>
      <if test="originalname != null" >
        #{originalname,jdbcType=VARCHAR},
      </if>
      <if test="currentname != null" >
        #{currentname,jdbcType=VARCHAR},
      </if>
      <if test="uptime != null" >
        #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null" >
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="employeename != null" >
        #{employeename,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="browsetimes != null" >
        #{browsetimes,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xm.exam.bean.trainContent.TraincontentExample" resultType="java.lang.Integer" >
    select count(*) from traincontent
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update traincontent
    <set >
      <if test="record.documentid != null" >
        documentId = #{record.documentid,jdbcType=INTEGER},
      </if>
      <if test="record.departmentid != null" >
        departmentId = #{record.departmentid,jdbcType=VARCHAR},
      </if>
      <if test="record.documentname != null" >
        documentName = #{record.documentname,jdbcType=VARCHAR},
      </if>
      <if test="record.traintype != null" >
        trainType = #{record.traintype,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentname != null" >
        departmentName = #{record.departmentname,jdbcType=VARCHAR},
      </if>
      <if test="record.knowledgetype != null" >
        knowledgeType = #{record.knowledgetype,jdbcType=VARCHAR},
      </if>
      <if test="record.originalname != null" >
        originalName = #{record.originalname,jdbcType=VARCHAR},
      </if>
      <if test="record.currentname != null" >
        currentName = #{record.currentname,jdbcType=VARCHAR},
      </if>
      <if test="record.uptime != null" >
        upTime = #{record.uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.size != null" >
        size = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.employeename != null" >
        employeeName = #{record.employeename,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.browsetimes != null" >
        browseTimes = #{record.browsetimes,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update traincontent
    set documentId = #{record.documentid,jdbcType=INTEGER},
      departmentId = #{record.departmentid,jdbcType=VARCHAR},
      documentName = #{record.documentname,jdbcType=VARCHAR},
      trainType = #{record.traintype,jdbcType=VARCHAR},
      departmentName = #{record.departmentname,jdbcType=VARCHAR},
      knowledgeType = #{record.knowledgetype,jdbcType=VARCHAR},
      originalName = #{record.originalname,jdbcType=VARCHAR},
      currentName = #{record.currentname,jdbcType=VARCHAR},
      upTime = #{record.uptime,jdbcType=TIMESTAMP},
      size = #{record.size,jdbcType=VARCHAR},
      employeeName = #{record.employeename,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      browseTimes = #{record.browsetimes,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xm.exam.bean.trainContent.Traincontent" >
    update traincontent
    <set >
      <if test="departmentid != null" >
        departmentId = #{departmentid,jdbcType=VARCHAR},
      </if>
      <if test="documentname != null" >
        documentName = #{documentname,jdbcType=VARCHAR},
      </if>
      <if test="traintype != null" >
        trainType = #{traintype,jdbcType=VARCHAR},
      </if>
      <if test="departmentname != null" >
        departmentName = #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="knowledgetype != null" >
        knowledgeType = #{knowledgetype,jdbcType=VARCHAR},
      </if>
      <if test="originalname != null" >
        originalName = #{originalname,jdbcType=VARCHAR},
      </if>
      <if test="currentname != null" >
        currentName = #{currentname,jdbcType=VARCHAR},
      </if>
      <if test="uptime != null" >
        upTime = #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null" >
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="employeename != null" >
        employeeName = #{employeename,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="browsetimes != null" >
        browseTimes = #{browsetimes,jdbcType=INTEGER},
      </if>
    </set>
    where documentId = #{documentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xm.exam.bean.trainContent.Traincontent" >
    update traincontent
    set departmentId = #{departmentid,jdbcType=VARCHAR},
      documentName = #{documentname,jdbcType=VARCHAR},
      trainType = #{traintype,jdbcType=VARCHAR},
      departmentName = #{departmentname,jdbcType=VARCHAR},
      knowledgeType = #{knowledgetype,jdbcType=VARCHAR},
      originalName = #{originalname,jdbcType=VARCHAR},
      currentName = #{currentname,jdbcType=VARCHAR},
      upTime = #{uptime,jdbcType=TIMESTAMP},
      size = #{size,jdbcType=VARCHAR},
      employeeName = #{employeename,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      browseTimes = #{browsetimes,jdbcType=INTEGER}
    where documentId = #{documentid,jdbcType=INTEGER}
  </update>
</mapper>