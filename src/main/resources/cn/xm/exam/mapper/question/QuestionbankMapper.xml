<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xm.exam.mapper.question.QuestionbankMapper" >
  <resultMap id="BaseResultMap" type="cn.xm.exam.bean.question.Questionbank" >
    <id column="questionBankId" property="questionbankid" jdbcType="VARCHAR" />
    <result column="questionBankName" property="questionbankname" jdbcType="VARCHAR" />
    <result column="departmentId" property="departmentid" jdbcType="VARCHAR" />
    <result column="employeeName" property="employeename" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="isUse" property="isuse" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="categoryNameId" property="categorynameid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    questionBankId, questionBankName, departmentId, employeeName, createTime, isUse, 
    description, categoryNameId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xm.exam.bean.question.QuestionbankExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from questionbank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from questionbank
    where questionBankId = #{questionbankid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from questionbank
    where questionBankId = #{questionbankid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xm.exam.bean.question.QuestionbankExample" >
    delete from questionbank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xm.exam.bean.question.Questionbank" >
    insert into questionbank (questionBankId, questionBankName, 
      departmentId, employeeName, createTime, 
      isUse, description, categoryNameId
      )
    values (#{questionbankid,jdbcType=VARCHAR}, #{questionbankname,jdbcType=VARCHAR}, 
      #{departmentid,jdbcType=VARCHAR}, #{employeename,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{isuse,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{categorynameid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.xm.exam.bean.question.Questionbank" >
    insert into questionbank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="questionbankid != null" >
        questionBankId,
      </if>
      <if test="questionbankname != null" >
        questionBankName,
      </if>
      <if test="departmentid != null" >
        departmentId,
      </if>
      <if test="employeename != null" >
        employeeName,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="isuse != null" >
        isUse,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="categorynameid != null" >
        categoryNameId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="questionbankid != null" >
        #{questionbankid,jdbcType=VARCHAR},
      </if>
      <if test="questionbankname != null" >
        #{questionbankname,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=VARCHAR},
      </if>
      <if test="employeename != null" >
        #{employeename,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isuse != null" >
        #{isuse,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="categorynameid != null" >
        #{categorynameid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xm.exam.bean.question.QuestionbankExample" resultType="java.lang.Integer" >
    select count(*) from questionbank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update questionbank
    <set >
      <if test="record.questionbankid != null" >
        questionBankId = #{record.questionbankid,jdbcType=VARCHAR},
      </if>
      <if test="record.questionbankname != null" >
        questionBankName = #{record.questionbankname,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentid != null" >
        departmentId = #{record.departmentid,jdbcType=VARCHAR},
      </if>
      <if test="record.employeename != null" >
        employeeName = #{record.employeename,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isuse != null" >
        isUse = #{record.isuse,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.categorynameid != null" >
        categoryNameId = #{record.categorynameid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update questionbank
    set questionBankId = #{record.questionbankid,jdbcType=VARCHAR},
      questionBankName = #{record.questionbankname,jdbcType=VARCHAR},
      departmentId = #{record.departmentid,jdbcType=VARCHAR},
      employeeName = #{record.employeename,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      isUse = #{record.isuse,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      categoryNameId = #{record.categorynameid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xm.exam.bean.question.Questionbank" >
    update questionbank
    <set >
      <if test="questionbankname != null" >
        questionBankName = #{questionbankname,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null" >
        departmentId = #{departmentid,jdbcType=VARCHAR},
      </if>
      <if test="employeename != null" >
        employeeName = #{employeename,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isuse != null" >
        isUse = #{isuse,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="categorynameid != null" >
        categoryNameId = #{categorynameid,jdbcType=VARCHAR},
      </if>
    </set>
    where questionBankId = #{questionbankid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xm.exam.bean.question.Questionbank" >
    update questionbank
    set questionBankName = #{questionbankname,jdbcType=VARCHAR},
      departmentId = #{departmentid,jdbcType=VARCHAR},
      employeeName = #{employeename,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      isUse = #{isuse,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      categoryNameId = #{categorynameid,jdbcType=VARCHAR}
    where questionBankId = #{questionbankid,jdbcType=VARCHAR}
  </update>
</mapper>