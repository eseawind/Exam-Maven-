<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xm.exam.mapper.employee.in.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="cn.xm.exam.bean.employee.in.Department" >
    <id column="departmentId" property="departmentid" jdbcType="VARCHAR" />
    <result column="upDepartmentId" property="updepartmentid" jdbcType="VARCHAR" />
    <result column="departmentName" property="departmentname" jdbcType="VARCHAR" />
    <result column="employeeName" property="employeename" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="VARCHAR" />
    <result column="departProjectNames" property="departprojectnames" jdbcType="VARCHAR" />
    <result column="departmentType" property="departmenttype" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    departmentId, upDepartmentId, departmentName, employeeName, phone, description, sort, 
    departProjectNames, departmentType
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xm.exam.bean.employee.in.DepartmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from department
    where departmentId = #{departmentid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from department
    where departmentId = #{departmentid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xm.exam.bean.employee.in.DepartmentExample" >
    delete from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xm.exam.bean.employee.in.Department" >
    insert into department (departmentId, upDepartmentId, departmentName, 
      employeeName, phone, description, 
      sort, departProjectNames, departmentType
      )
    values (#{departmentid,jdbcType=VARCHAR}, #{updepartmentid,jdbcType=VARCHAR}, #{departmentname,jdbcType=VARCHAR}, 
      #{employeename,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{sort,jdbcType=VARCHAR}, #{departprojectnames,jdbcType=VARCHAR}, #{departmenttype,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.xm.exam.bean.employee.in.Department" >
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="departmentid != null" >
        departmentId,
      </if>
      <if test="updepartmentid != null" >
        upDepartmentId,
      </if>
      <if test="departmentname != null" >
        departmentName,
      </if>
      <if test="employeename != null" >
        employeeName,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="departprojectnames != null" >
        departProjectNames,
      </if>
      <if test="departmenttype != null" >
        departmentType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="departmentid != null" >
        #{departmentid,jdbcType=VARCHAR},
      </if>
      <if test="updepartmentid != null" >
        #{updepartmentid,jdbcType=VARCHAR},
      </if>
      <if test="departmentname != null" >
        #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="employeename != null" >
        #{employeename,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=VARCHAR},
      </if>
      <if test="departprojectnames != null" >
        #{departprojectnames,jdbcType=VARCHAR},
      </if>
      <if test="departmenttype != null" >
        #{departmenttype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xm.exam.bean.employee.in.DepartmentExample" resultType="java.lang.Integer" >
    select count(*) from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update department
    <set >
      <if test="record.departmentid != null" >
        departmentId = #{record.departmentid,jdbcType=VARCHAR},
      </if>
      <if test="record.updepartmentid != null" >
        upDepartmentId = #{record.updepartmentid,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentname != null" >
        departmentName = #{record.departmentname,jdbcType=VARCHAR},
      </if>
      <if test="record.employeename != null" >
        employeeName = #{record.employeename,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=VARCHAR},
      </if>
      <if test="record.departprojectnames != null" >
        departProjectNames = #{record.departprojectnames,jdbcType=VARCHAR},
      </if>
      <if test="record.departmenttype != null" >
        departmentType = #{record.departmenttype,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update department
    set departmentId = #{record.departmentid,jdbcType=VARCHAR},
      upDepartmentId = #{record.updepartmentid,jdbcType=VARCHAR},
      departmentName = #{record.departmentname,jdbcType=VARCHAR},
      employeeName = #{record.employeename,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=VARCHAR},
      departProjectNames = #{record.departprojectnames,jdbcType=VARCHAR},
      departmentType = #{record.departmenttype,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xm.exam.bean.employee.in.Department" >
    update department
    <set >
      <if test="updepartmentid != null" >
        upDepartmentId = #{updepartmentid,jdbcType=VARCHAR},
      </if>
      <if test="departmentname != null" >
        departmentName = #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="employeename != null" >
        employeeName = #{employeename,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=VARCHAR},
      </if>
      <if test="departprojectnames != null" >
        departProjectNames = #{departprojectnames,jdbcType=VARCHAR},
      </if>
      <if test="departmenttype != null" >
        departmentType = #{departmenttype,jdbcType=VARCHAR},
      </if>
    </set>
    where departmentId = #{departmentid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xm.exam.bean.employee.in.Department" >
    update department
    set upDepartmentId = #{updepartmentid,jdbcType=VARCHAR},
      departmentName = #{departmentname,jdbcType=VARCHAR},
      employeeName = #{employeename,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=VARCHAR},
      departProjectNames = #{departprojectnames,jdbcType=VARCHAR},
      departmentType = #{departmenttype,jdbcType=VARCHAR}
    where departmentId = #{departmentid,jdbcType=VARCHAR}
  </update>
</mapper>