<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">

<!-- lixianyuan  -->
<struts>
	<package name="lxyPackage" extends="json-default" namespace="/">
		
		<!-- S   QLQ 增加的培训类别管理 -->
		<global-results>
			<result name="success" type="json">
				<param name="root">response</param>
			</result>
		</global-results>
		<action name="trainacontentType_*" method="{1}" class="traincontentTypeAction">
			<param name="savePath">G:/images/videos/</param>
			<result name="toAdd">/view/train/addTrainFile.jsp</result>
		</action>
		<!-- E   QLQ 增加的培训类别管理 -->
		
		
		
		
		
		
		
		

		<action name="train_*" class="traincontentAction" method="{1}">
			<!-- 这个用于将map转成json -->
			<result name="ok" type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<param name="root">map</param>
			</result>
			
			<!-- 跳转到修改培训资料信息的jsp页面中 -->
			<result name="modifyJsp">/view/train/modifyTrainFile.jsp</result>
			
			
			<!-- **用于显示详细信息的视图配置  start**-->
			<!-- 如果该文件是非视频的话，就跳转到这个显示详细信息的页面 -->
			<result name="detailText">/view/train/trainDateText.jsp</result>
			<!-- 如果该文件是视频的话，就跳转到这个显示详细信息的页面 -->
			<result name="detailVideo">/view/train/trainDateView.jsp</result>
			<!-- **用于显示详细信息的视图配置  end**-->
			
			<!-- 培训中心的  start -->
			<result name="videoPlay">/view/index/video.jsp</result><!-- 跳转到视频播放页面 -->
			
			
			<!-- 培训中心的  end -->
			
			<result name="login">/view/train/addTrainFile.jsp</result>
			<!-- 文件上传 start -->
			<!-- 往FileUploadInterceptor拦截器的属性注入值(调用setter方法) -->
			<interceptor-ref name="defaultStack">
				<!-- 改变当前文件上传拦截器的允许文件类型 -->
				<!-- <param name="fileUpload.allowedTypes">image/jpeg,image/jpg,application/pdf</param> -->
				<!-- 允许的文件后缀 -->
				<param name="fileUpload.allowedExtensions">txt,doc,pdf,docx,ppt,pptx,mp4,xls,xlsx,ogg,webm</param>
				<!-- 如果以上配置文件都写了，那么取他们的交集 -->
			</interceptor-ref>

			<!-- 给setSavePath方法中的savePath属性注入值 -->
			<param name="savePath">G:/images/videos/</param>
			<result>/login.jsp</result>
			<!-- 文件上传 end -->
		</action>

		<!-- 文件下载 start -->
		<action name="down_*" class="cn.xm.exam.action.trainContent.DownAction"
			method="{1}">
			<!-- 为setServerPath方法中的serverPath属性注入值 也就是文件存放的地址/目录(文件应该从哪里下载) -->
			<param name="serverPath">G:/images/videos/</param>
			<result name="list">/listFile.jsp</result>

			<!-- 文件下载的关键：视图类型一定是stream -->
			<result name="down" type="stream">
				<!-- 往StreamResult类中的属性注入内容 -->
				<!-- 返回给浏览器的文件类型。返回通用的二进制 -->
				<param name="contentType">application/octet-stream</param>
				<!-- 返回给浏览器的输入流 -->
				<!-- 默认就是 inputStream，它将会指示 StreamResult 通过 inputName 属性值的 getter 方法， 
					比如这里就是 getInputStream() 来获取下载文件的内容，意味着你的 Action 要有这个方法 -->
				<param name="inputName">inputStream</param>

				<!-- 告诉浏览器的方式下载资源 ${name}:获取Action中getName()方法的数据 -->
				<!-- 默认为 inline(在线打开)，设置为 attachment 将会告诉浏览器下载该文件，filename 指定下载文 件保存的文件名，若未指定将会是以浏览的页面名作为文件名，如以 
					download.action 作为文件名， 这里使用的是动态文件名，${name}, 它将通过 Action 的 getName() 获得文件名 -->
				<param name="contentDisposition">attachment;filename=${name}</param>
				<!-- 缓存大小 -->
				<param name="bufferSize">1024</param>
			</result>
		</action>

		<!-- 文件下载 end -->
			
	</package>

	<!-- 修改临时文件存放的目录 -->
	<!-- <constant name="struts.multipart.saveDir" value="D:/images/"></constant> -->
	<!-- 修改文件上传的大小 -->
	<constant name="struts.multipart.maxSize" value="90000000000000"></constant>
</struts>
