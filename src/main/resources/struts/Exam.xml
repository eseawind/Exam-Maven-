<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>
	<package name="exam" namespace="/" extends="json-default,struts-default">
		<!-- 全局结果集，将response转换为json传到前台 -->
		<global-results>
			<result name="success" type="json">
				<param name="root">response</param>
			</result>
		</global-results>
		<!-- 添加考试 -->
		<action name="exam_*" class="addExamAction" method="{1}"></action>
		<!-- 查询考试 -->
		<action name="findExam_*" class="findExamAction" method="{1}"></action>
		<!--删除考试 -->
		<action name="deleteExam" class="deleteExamAction"></action>
		<!--修改考试 -->
		<action name="UpdateExam_*" class="updateExamAction" method="{1}">
			<!-- 将信息带到修改界面 (页面跳转的方式) -->
			<result name="findExam">/view/examParper/exam/modifyExam.jsp</result>
			<!-- 修改考试(ajax+json方式) -->
		</action>

		<!-- 导出参考人员信息 -->
		<action name="exportExamEmployees" class="extExamEmployeesAction">
			<result type="stream">
				<!-- 其他的参数在类中设置或者使用默认 -->
				<param name="contentType">application/octet-stream</param>
				<param name="inputName">inputStream</param>
				<param name="contentDisposition">attachment;filename="${downloadFileName}"</param>
				<param name="bufferSize">8192</param>
			</result>
		</action>
		<!-- 导出试卷答案信息 -->
		<action name="extPaperAnswer" class="extPaperAnswerAction">
			<result type="stream">
				<!-- 其他的参数在类中设置或者使用默认 -->
				<param name="contentType">application/octet-stream</param>
				<param name="inputName">inputStream</param>
				<param name="contentDisposition">attachment;filename="${downloadFileName}"</param>
				<param name="bufferSize">8192</param>
			</result>
		</action>
		<!-- 导出试卷信息 -->
		<action name="extPaper" class="extExamPaperAction">
			<result type="stream">
				<!-- 其他的参数在类中设置或者使用默认 -->
				<param name="contentType">application/octet-stream</param>
				<param name="inputName">inputStream</param>
				<param name="contentDisposition">attachment;filename="${downloadFileName}"</param>
				<param name="bufferSize">8192</param>
			</result>
		</action>


		<!-- 下载专区的文件下载 -->
		<action name="export_*" class="extDownloadFile">
			<!-- 为setServerPath方法中的serverPath属性注入值 也就是文件存放的地址/目录(文件应该从哪里下载) -->
			<param name="serverPath">/files/downloadFiles</param>
			<!-- 文件下载的关键：视图类型一定是stream -->
			<result type="stream">
				<!-- 往StreamResult类中的属性注入内容 -->
				<!-- 返回给浏览器的文件类型。返回通用的二进制 -->
				<param name="contentType">application/octet-stream</param>
				<!-- 返回给浏览器的输入流 -->
				<!-- 默认就是 inputStream，它将会指示 StreamResult 通过 inputName 属性值的 getter 方法， 
					比如这里就是 getInputStream() 来获取下载文件的内容，意味着你的 Action 要有这个方法 -->
				<param name="inputName">inputStream</param>
				<!-- 告诉浏览器的方式下载资源 ${name}:获取Action中getName()方法的数据 -->
				<!-- 默认为 inline(在线打开)，设置为 attachment 将会告诉浏览器下载该文件，filename 指定下载文 件保存的文件名，若未指定将会是以浏览的页面名作为文件名，如以 
					download.action 作为文件名， 这里使用的是动态文件名，${name}, 它将通过 Action 的 getName() 获得文件名 -->
				<param name="contentDisposition">attachment;filename=${name}</param>
				<!-- 缓存大小 -->
				<param name="bufferSize">1024</param>
			</result>
		</action>



	</package>
</struts>
